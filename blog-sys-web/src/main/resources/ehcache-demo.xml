<!--
    1. 快速
    2. 简单
    3. 多种缓存策略
    4. 缓存数据有两级:内存和磁盘，因此无需担心容量问题
    5. 缓存数据会在虚拟机重启的过程中写入磁盘
    6. 可以通过RMI、可插入API等方式进行分布式缓存
    7. 具有缓存和缓存管理器的侦听接口
    8. 支持多缓存管理器实例，以及一个实例的多个缓存区域
    9. 提供Hibernate的缓存实现、等等
    官网配置案例：http://www.ehcache.org/documentation/3.7/examples.html
  -->
<ehcache>

    <!-- Sets the path to the directory where cache .data files are created.

         If the path is a Java System Property it is replaced by
         its value in the running VM. The following properties are translated:

            user.home - SysUser's home directory  如：C:\Users\kiwipeach
            user.dir - SysUser's current working directory 如：D:\souce_code\mine_source\nice-blog-sys\blog-sys-web
            java.io.tmpdir - Default temp file path  如：C:\Users\KIWIPE~1\AppData\Local\Temp\
    -->
    <diskStore path="java.io.tmpdir/shiro-ehcache"/>


    <!--Default Cache configuration. These will applied to caches programmatically created through
    the CacheManager.

    The following attributes are required:（必须配置的属性）

    maxElementsInMemory            - Sets the maximum number of objects that will be created in memory （缓存最大个数。）
    eternal                        - Sets whether elements are eternal. If eternal,  timeouts are ignored and the
                                     element is never expired.（对象是否永久有效，一但设置了，timeout将不起作用。）
    overflowToDisk                 - Sets whether elements can overflow to disk when the in-memory cache
                                     has reached the maxInMemory limit.（当内存中对象数量达到maxElementsInMemory时，Ehcache将会对象写到磁盘中。 ）

    The following attributes are optional:（可选配置属性）
    timeToIdleSeconds              - Sets the time to idle for an element before it expires.
                                     i.e. The maximum amount of time between accesses before an element expires
                                     Is only used if the element is not eternal.
                                     Optional attribute. A value of 0 means that an Element can idle for infinity.
                                     The default value is 0.
                                     （设置允许对象处于空闲状态的最长时间，以秒为单位。 当对象最近一次被访问后，
                                     如果处于空闲状态的时间超过了timeToldleSeconds属性值，这个对象就会过期。 当对象过期，
                                     EHCache将把它从缓存中清空。只有当eternal属性为false. 该属性才有效。如果该属性的值为0，
                                     那么就表示该对象可以无限期地存于缓存中。 即缓存被创建后，最后一次访问时间到缓存失效之时，
                                     两者之间的间隔，单位为秒(s)）
    timeToLiveSeconds              - Sets the time to live for an element before it expires.
                                     i.e. The maximum time between creation time and when an element expires.
                                     Is only used if the element is not eternal.
                                     Optional attribute. A value of 0 means that and Element can live for infinity.
                                     The default value is 0.
                                     （必须大于timeToldleSeconds属性，才有意义；当对象自从被存放到缓存中后，如果处于缓存中的时间超过了
                                     timeToLiveSeconds属性值,这个对象就会过期，EHCache将把它从缓存中清除；即缓存自创建日期起能够存活的最长时间，
                                     单位为秒(s)
    diskPersistent                 - Whether the disk store persists between restarts of the Virtual Machine.
                                     The default value is false.
                                     （是否disk store在虚拟机启动时持久化。默认为false）
    diskExpiryThreadIntervalSeconds- The number of seconds between runs of the disk expiry thread. The default value
                                     is 120 seconds.
                                     Ehcache后台线程专门做Ellment失效监测以及清除工作。
                                     此值不宜设置过低，否则会导致清理线程占用大量CPU资源。
                                     默认值是120秒。
    memoryStoreEvictionPolicy      - Policy would be enforced upon reaching the maxElementsInMemory limit. Default
                                     policy is Least Recently Used (specified as LRU). Other policies available -
                                     First In First Out (specified as FIFO) and Less Frequently Used
                                     (specified as LFU)
                                     缓存清空策略
                                     1.FIFO：first in first out 先进先出
                                     2.LFU： Less Frequently Used 一直以来最少被使用的
                                     3.LRU：Least Recently Used  最近最少使用的
    -->

    <defaultCache
            maxElementsInMemory="10000"
            eternal="false"
            timeToIdleSeconds="120"
            timeToLiveSeconds="120"
            overflowToDisk="false"
            diskPersistent="false"
            diskExpiryThreadIntervalSeconds="120"
    />

    <!--属性测试：只能存五个，不能永久在内存中留存，不会刷新到磁盘，超过5s没被使用就会从内存中被清除掉，寿命只有30s，清除策略
        遵守最近最少使用原则，意思是说，如果缓存达到上限了，有没有空闲的能够判断清理，并且所有的寿命都没有到，那么这个时候，就
        需要按照最近最少使用的策略去清除内存中的缓存。-->
    <cache name="HelloWordCache"
           maxElementsInMemory="5"
           eternal="false"
           overflowToDisk="false"
           timeToIdleSeconds="5"
           timeToLiveSeconds="30"
           memoryStoreEvictionPolicy="LRU"/>

</ehcache>


